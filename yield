#!/usr/bin/env ruby

# Author: Fred Wu
# Source code: https://github.com/fredwu/yield.rb
# License: http://fredwu.mit-license.org/

require "yaml"
require "json"
require "open-uri"

require_relative "./yield.rb/binance.rb"
require_relative "./yield.rb/yieldwatch.rb"

options = YAML.load_file("./config.yml")

class Yield
  def self.output(data, settings)
    hash = Hash[data.flatten.inject do |result, tokens|
      result.merge(tokens) { |_, n1, n2| (n1 + n2).round(settings["rounding"]) }
    end.reject{ |k, v| settings["hide_tokens"].include?(k) }.sort]

    hash.each { |k, v| puts "#{k}\t#{v}" }
  end
end

data = [
  Thread.new { Binance.new(options["settings"].merge(options["binance"])).parse },
  Thread.new { YieldWatch.new(options["settings"].merge(options["yieldwatch"])).parse },
].map(&:value)

Yield.output(data, options["settings"])
