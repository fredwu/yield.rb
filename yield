#!/usr/bin/env ruby

# Author: Fred Wu
# Source code: https://github.com/fredwu/yield.rb
# License: http://fredwu.mit-license.org/

require "yaml"
require "json"
require "openssl"
require "net/http"
require "open-uri"
require "pry"

require_relative "./yield.rb/utils.rb"
require_relative "./yield.rb/0xtracker.rb"
require_relative "./yield.rb/apeboard.rb"
require_relative "./yield.rb/exchange.rb"
require_relative "./yield.rb/binance/spot.rb"
require_relative "./yield.rb/bittrex.rb"
require_relative "./yield.rb/coingecko.rb"
require_relative "./yield.rb/manual.rb"
require_relative "./yield.rb/yield.rb"
require_relative "./yield.rb/yieldwatch.rb"

options = YAML.load_file("./config.yml")

data = [
  options["settings"]["include_tokens"] && Thread.new { Manual.new(options["settings"]).parse },
  options["0xtracker"] && Thread.new { ZeroxTracker.new(options["settings"].merge(options["0xtracker"])).parse },
  options["apeboard"] && Thread.new { ApeBoard.new(options["settings"].merge(options["apeboard"])).parse },
  options["binance"] && Thread.new { Binance::Spot.new(options["settings"].merge(options["binance"])).parse },
  options["bittrex"] && Thread.new { Bittrex.new(options["settings"].merge(options["bittrex"])).parse },
  options["yieldwatch"] && Thread.new { YieldWatch.new(options["settings"].merge(options["yieldwatch"])).parse },
].compact.map(&:value)

Yield.new(data, options["settings"]).output()
